{"version":3,"sources":["App.js","index.js"],"names":["Status","props","statusString","gameState","className","Grid","height","n","out","setGrid","grid","changeCell","useState","activeRow","setActiveRow","activeCol","setActiveCol","_cellOnClick","e","cellRow","parseInt","target","getAttribute","cellCol","originalGrid","handleKeyDown","event","keyCode","which","console","log","preventDefault","Math","max","min","React","useEffect","window","addEventListener","removeEventListener","row","rowList","col","i","isTop","isBottom","isLeft","isRight","isMiniTop","isMiniBottom","isMiniLeft","isMiniRight","isOriginalCell","isActiveCell","isOldVal","val","abs","push","data-row","data-col","onMouseDown","toString","NewGameButton","setOriginalGrid","setN","onClick","fetch","then","response","text","data","JSON","parse","newGame","SolveGameButton","method","headers","body","stringify","history","timeout","forEach","change","setTimeout","BottomBar","App","setGameState","newGrid","newRow","cell","checkGrid","length","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbf5959b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction Status(props) {\n  let gameState = props.gameState;\n\n  let statusString = \"\";\n  switch (gameState) {\n    case \"incomplete\":\n      statusString = \"Your game is: incomplete :s\";\n      break\n    case \"incorrect\":\n      statusString = \"Your game is: incorrect :(\";\n      break\n    case \"correct\":\n      statusString = \"Your game is: solved :D\";\n      break\n  }\n\n  return (\n      <div className={'gameState'}>{statusString}</div>\n  )\n}\n\nfunction Grid(props) {\n  let height = props.n ** 2;\n  let n = props.n;\n  let setGrid = props.setGrid;\n  let grid = props.grid;\n  let out = [];\n  const changeCell = props.changeCell;\n\n  let [activeRow, setActiveRow] = useState(-1);\n  let [activeCol, setActiveCol] = useState(-1);\n\n  function _cellOnClick(e) {\n    let cellRow = parseInt(e.target.getAttribute(\"data-row\"));\n    let cellCol = parseInt(e.target.getAttribute(\"data-col\"));\n    if (props.originalGrid[cellRow][cellCol] === 0) {\n      setActiveRow(cellRow);\n      setActiveCol(cellCol);\n    }\n  }\n\n  const handleKeyDown = (event) => {\n    let keyCode = event.which;\n    console.log(keyCode);\n    let newCol = activeCol;\n    let newRow = activeRow;\n    switch (keyCode) {\n      case 37:\n        event.preventDefault();\n        setActiveCol(Math.max(0, activeCol - 1));\n        break;\n      case 39:\n        event.preventDefault();\n        setActiveCol(Math.min(n*n - 1, activeCol + 1));\n        break;\n      case 38:\n        event.preventDefault();\n        setActiveRow(Math.max(0, activeRow - 1));\n        break;\n      case 40:\n        event.preventDefault();\n        setActiveRow(Math.min(n*n - 1, activeRow + 1));\n        break;\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n      case 8:\n      case 46:\n        const canEditCell = props.originalGrid[activeRow][activeCol] === 0;\n        if (canEditCell) {\n          if (keyCode >= 49 && keyCode <= 57) {\n            changeCell(activeRow, activeCol, keyCode - 48);\n          } else if (keyCode === 8 || keyCode === 46) {\n            changeCell(activeRow, activeCol, 0);\n          }\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    // cleanup this component\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [activeCol, activeRow]);\n\n  React.useEffect(() => {\n    setActiveRow(-1);\n    setActiveCol(-1);\n  }, [props.originalGrid])\n\n  for (let row = 0; row < height; row++) {\n    let rowList = []\n    for (let col = 0; col < height; col++) {\n      let i = (row * height) + col;\n      let isTop = row === 0;\n      let isBottom = row === height - 1;\n      let isLeft = col === 0;\n      let isRight = col === height - 1;\n      let isMiniTop = !isTop && row % n === 0;\n      let isMiniBottom = !isBottom && (row + 1) % n === 0;\n      let isMiniLeft = !isLeft && col % n === 0;\n      let isMiniRight = !isRight && (col + 1) % n === 0;\n      let isOriginalCell = props.originalGrid[row][col] !== 0;\n      let isActiveCell = row === activeRow && col === activeCol;\n      let isOldVal = props.grid[row][col] < 0;\n      let val = Math.abs(props.grid[row][col]);\n      rowList.push(<div key={i.toString()} data-row={row} data-col={col}\n                          className={`cell ${isTop ? \"top\" : \"\"} ${isBottom ? \"bottom\" : \"\"} ${isLeft ? \"left\" : \"\"} ${isRight ? \"right\" : \"\"}\n                                                ${isMiniTop ? \"miniTop\" : \"\"} ${isMiniBottom ? \"miniBottom\" : \"\"}\n                                                ${isMiniLeft ? \"miniLeft\" : \"\"} ${isMiniRight ? \"miniRight\" : \"\"}\n                                                ${isOriginalCell ? \"originalCell\" : \"\"} ${isActiveCell ? \"activeCell\" : \"\"}\n                                                ${isOldVal ? \"oldCell\" : \"\"}`}\n                  onMouseDown={_cellOnClick}> {val !== 0 ? val : \"\"} </div> )\n    }\n    out.push(<div key={row.toString()} className={'row'}>{rowList}</div> )\n  }\n\n  return (\n      <div className={'grid'}>{out}</div>\n  );\n}\n\nfunction NewGameButton(props) {\n  const setGrid = props.setGrid;\n  const setOriginalGrid = props.setOriginalGrid;\n  const setN = props.setN;\n\n  function _handleNewGameClick(e) {\n    fetch('/api/new_puzzle')\n        .then(response => response.text())\n        .then(data => JSON.parse(data))\n        .then(newGame => {\n          console.log(newGame.grid);\n          setOriginalGrid(newGame.grid);\n          setGrid(newGame.grid);\n          setN(newGame.n);\n        });\n  }\n\n  return (\n      <button onClick={_handleNewGameClick}>New Game</button>\n  )\n}\n\nfunction SolveGameButton(props) {\n  const setGrid = props.setGrid;\n  const originalGrid = props.originalGrid;\n  const changeCell = props.changeCell;\n\n  function _handleSolveGameClick(e) {\n    fetch('/api/solve_puzzle', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        grid: originalGrid\n      })\n    })\n        .then(response => response.text())\n        .then(data => JSON.parse(data))\n        .then(data => {\n          const history = data.history;\n          const interval = 100;\n          let timeout = 0;\n\n          if (history[2] === 0) {\n            console.log('here');\n          }\n\n          history.forEach(change => {\n            setTimeout(() => {\n              if (change[2] === 0) {\n                console.log('here');\n              }\n              changeCell(change[0], change[1], change[2]);\n            }, timeout)\n            timeout += interval;\n          })\n\n          console.log(history);\n        })\n    }\n\n  return (\n      <button onClick={_handleSolveGameClick}>Solve Game</button>\n  )\n}\n\nfunction BottomBar(props) {\n  return (\n      <div className={'bottomBar'}>\n        <NewGameButton setGrid={props.setGrid} setOriginalGrid={props.setOriginalGrid} setN={props.setN} />\n        <SolveGameButton setGrid={props.setGrid} originalGrid={props.originalGrid} changeCell={props.changeCell} />\n      </div>\n  )\n}\n\nfunction App() {\n  const [originalGrid, setOriginalGrid] = useState([]);\n  const [grid, setGrid] = useState([]);\n  const [n, setN] = useState(0);\n  const [gameState, setGameState] = useState(\"incomplete\");\n\n  function _newGame() {\n    fetch('/api/new_puzzle')\n        .then(response => response.text())\n        .then(data => JSON.parse(data))\n        .then(newGame => {\n          console.log(newGame.grid);\n          setOriginalGrid(newGame.grid);\n          setGrid(newGame.grid);\n          setN(newGame.n);\n        });\n  }\n\n  function changeCell(row, col, val) {\n    setGrid(grid => {\n      const newGrid = [];\n      grid.forEach(row => {\n        const newRow = [];\n        row.forEach(cell => {\n          newRow.push(cell);\n        })\n        newGrid.push(newRow);\n      });\n      newGrid[row][col] = val;\n      return newGrid;\n    });\n  }\n\n  useEffect(() => {\n    _newGame();\n  }, []);\n\n  useEffect(() => {\n    let checkGrid = grid.length > 0;\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (cell === 0) {\n          checkGrid = false;\n        }\n      })\n    })\n\n    if (checkGrid) {\n      fetch('/api/check_puzzle', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          grid: grid\n        })\n      })\n          .then(response => response.text())\n          .then(data => JSON.parse(data))\n          .then(data => {\n            setGameState(data.status);\n          })\n    } else {\n      setGameState(\"incomplete\");\n    }\n    console.log(gameState);\n  }, [grid])\n\n  return (\n    <div className=\"App\">\n      <div className={'gridHolder'}>\n        <Status gameState={gameState} />\n        <Grid originalGrid={originalGrid} grid={grid} n={n} setGrid={setGrid} changeCell={changeCell}/>\n        <BottomBar setGrid={setGrid} setOriginalGrid={setOriginalGrid} setN={setN} originalGrid={originalGrid}\n                  changeCell={changeCell} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}